//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34209.
// 
#pragma warning disable 1591

namespace AsmodatForex.com.efxnow.api {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Gain Capital - AutoEx Trading APISoap", Namespace="https://api.efxnow.com/webservices2.3")]
    public partial class GainCapitalAutoExTradingAPI : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetCommentDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDealBlotterDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDealBlotterDataSetWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDelayedRatesDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMarginBlotterDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomMarginBlotterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomPositionBlotterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderBlotterDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPositionBlotterDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRatesBlotterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRatesDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHistoricRatesDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSymbolBlotterDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTickerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEconomicCalendarOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountServicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDealBlotterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDealBlotterWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMarginBlotterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderBlotterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPositionBlotterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSymbolBlotterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPairSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductSubscriptionRelationshipBlotterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductSubscriptionRelationshipBlotterDatasetOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveUserProductSubscriptionSettingsOperationCompleted;
        
        private Authenticator authenticatorValueField;
        
        private System.Threading.SendOrPostCallback PlaceSingleOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifySingleOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback PlaceOCOOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyOCOOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback DealRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback DealRequestByDealIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DealRequestAtBestOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelOrderByOrderIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelOrderByReferenceNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback PlaceIfThenOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyIfThenOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback PlaceIfThenOCOOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyIfThenOCOOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback PlaceSingleASSPOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifySingleASSPOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback PlaceOCOASSPOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyOCOASSPOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EchoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRatesServerAuthOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyCredentialsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubAccountAuthenticationKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubAccountCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubAccountNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback ServiceAuthenticationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetlTIDByBankConfOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIGAuthenticationKeyOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public GainCapitalAutoExTradingAPI() {
            this.Url = global::AsmodatForex.Properties.Settings.Default.AsmodatForex_com_efxnow_api_Gain_x0020_Capital_x0020___x0020_AutoEx_x0020_Trading_x0020_API;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public Authenticator AuthenticatorValue {
            get {
                return this.authenticatorValueField;
            }
            set {
                this.authenticatorValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetCommentDataSetCompletedEventHandler GetCommentDataSetCompleted;
        
        /// <remarks/>
        public event GetDealBlotterDataSetCompletedEventHandler GetDealBlotterDataSetCompleted;
        
        /// <remarks/>
        public event GetDealBlotterDataSetWithFilterCompletedEventHandler GetDealBlotterDataSetWithFilterCompleted;
        
        /// <remarks/>
        public event GetDelayedRatesDataSetCompletedEventHandler GetDelayedRatesDataSetCompleted;
        
        /// <remarks/>
        public event GetMarginBlotterDataSetCompletedEventHandler GetMarginBlotterDataSetCompleted;
        
        /// <remarks/>
        public event GetCustomMarginBlotterCompletedEventHandler GetCustomMarginBlotterCompleted;
        
        /// <remarks/>
        public event GetCustomPositionBlotterCompletedEventHandler GetCustomPositionBlotterCompleted;
        
        /// <remarks/>
        public event GetNewsDataSetCompletedEventHandler GetNewsDataSetCompleted;
        
        /// <remarks/>
        public event GetOrderBlotterDataSetCompletedEventHandler GetOrderBlotterDataSetCompleted;
        
        /// <remarks/>
        public event GetPositionBlotterDataSetCompletedEventHandler GetPositionBlotterDataSetCompleted;
        
        /// <remarks/>
        public event GetRatesBlotterCompletedEventHandler GetRatesBlotterCompleted;
        
        /// <remarks/>
        public event GetRatesCompletedEventHandler GetRatesCompleted;
        
        /// <remarks/>
        public event GetRatesDataSetCompletedEventHandler GetRatesDataSetCompleted;
        
        /// <remarks/>
        public event GetHistoricRatesDataSetCompletedEventHandler GetHistoricRatesDataSetCompleted;
        
        /// <remarks/>
        public event GetSymbolBlotterDataSetCompletedEventHandler GetSymbolBlotterDataSetCompleted;
        
        /// <remarks/>
        public event GetTickerCompletedEventHandler GetTickerCompleted;
        
        /// <remarks/>
        public event GetEconomicCalendarCompletedEventHandler GetEconomicCalendarCompleted;
        
        /// <remarks/>
        public event GetAccountCompletedEventHandler GetAccountCompleted;
        
        /// <remarks/>
        public event GetAccountServicesCompletedEventHandler GetAccountServicesCompleted;
        
        /// <remarks/>
        public event GetDealBlotterCompletedEventHandler GetDealBlotterCompleted;
        
        /// <remarks/>
        public event GetDealBlotterWithFilterCompletedEventHandler GetDealBlotterWithFilterCompleted;
        
        /// <remarks/>
        public event GetMarginBlotterCompletedEventHandler GetMarginBlotterCompleted;
        
        /// <remarks/>
        public event GetOrderBlotterCompletedEventHandler GetOrderBlotterCompleted;
        
        /// <remarks/>
        public event GetPositionBlotterCompletedEventHandler GetPositionBlotterCompleted;
        
        /// <remarks/>
        public event GetSymbolBlotterCompletedEventHandler GetSymbolBlotterCompleted;
        
        /// <remarks/>
        public event GetPairSettingsCompletedEventHandler GetPairSettingsCompleted;
        
        /// <remarks/>
        public event GetProductSubscriptionRelationshipBlotterCompletedEventHandler GetProductSubscriptionRelationshipBlotterCompleted;
        
        /// <remarks/>
        public event GetProductSubscriptionRelationshipBlotterDatasetCompletedEventHandler GetProductSubscriptionRelationshipBlotterDatasetCompleted;
        
        /// <remarks/>
        public event SaveUserProductSubscriptionSettingsCompletedEventHandler SaveUserProductSubscriptionSettingsCompleted;
        
        /// <remarks/>
        public event PlaceSingleOrderCompletedEventHandler PlaceSingleOrderCompleted;
        
        /// <remarks/>
        public event ModifySingleOrderCompletedEventHandler ModifySingleOrderCompleted;
        
        /// <remarks/>
        public event PlaceOCOOrderCompletedEventHandler PlaceOCOOrderCompleted;
        
        /// <remarks/>
        public event ModifyOCOOrderCompletedEventHandler ModifyOCOOrderCompleted;
        
        /// <remarks/>
        public event CancelOrderCompletedEventHandler CancelOrderCompleted;
        
        /// <remarks/>
        public event DealRequestCompletedEventHandler DealRequestCompleted;
        
        /// <remarks/>
        public event DealRequestByDealIdCompletedEventHandler DealRequestByDealIdCompleted;
        
        /// <remarks/>
        public event DealRequestAtBestCompletedEventHandler DealRequestAtBestCompleted;
        
        /// <remarks/>
        public event CancelOrderByOrderIDCompletedEventHandler CancelOrderByOrderIDCompleted;
        
        /// <remarks/>
        public event CancelOrderByReferenceNumberCompletedEventHandler CancelOrderByReferenceNumberCompleted;
        
        /// <remarks/>
        public event PlaceIfThenOrderCompletedEventHandler PlaceIfThenOrderCompleted;
        
        /// <remarks/>
        public event ModifyIfThenOrderCompletedEventHandler ModifyIfThenOrderCompleted;
        
        /// <remarks/>
        public event PlaceIfThenOCOOrderCompletedEventHandler PlaceIfThenOCOOrderCompleted;
        
        /// <remarks/>
        public event ModifyIfThenOCOOrderCompletedEventHandler ModifyIfThenOCOOrderCompleted;
        
        /// <remarks/>
        public event PlaceSingleASSPOrderCompletedEventHandler PlaceSingleASSPOrderCompleted;
        
        /// <remarks/>
        public event ModifySingleASSPOrderCompletedEventHandler ModifySingleASSPOrderCompleted;
        
        /// <remarks/>
        public event PlaceOCOASSPOrderCompletedEventHandler PlaceOCOASSPOrderCompleted;
        
        /// <remarks/>
        public event ModifyOCOASSPOrderCompletedEventHandler ModifyOCOASSPOrderCompleted;
        
        /// <remarks/>
        public event GetAccountDetailsCompletedEventHandler GetAccountDetailsCompleted;
        
        /// <remarks/>
        public event EchoCompletedEventHandler EchoCompleted;
        
        /// <remarks/>
        public event GetTimeCompletedEventHandler GetTimeCompleted;
        
        /// <remarks/>
        public event GetRatesServerAuthCompletedEventHandler GetRatesServerAuthCompleted;
        
        /// <remarks/>
        public event VerifyCredentialsCompletedEventHandler VerifyCredentialsCompleted;
        
        /// <remarks/>
        public event GetSubAccountAuthenticationKeyCompletedEventHandler GetSubAccountAuthenticationKeyCompleted;
        
        /// <remarks/>
        public event GetSubAccountCodeCompletedEventHandler GetSubAccountCodeCompleted;
        
        /// <remarks/>
        public event GetSubAccountNumberCompletedEventHandler GetSubAccountNumberCompleted;
        
        /// <remarks/>
        public event ServiceAuthenticationCompletedEventHandler ServiceAuthenticationCompleted;
        
        /// <remarks/>
        public event GetlTIDByBankConfCompletedEventHandler GetlTIDByBankConfCompleted;
        
        /// <remarks/>
        public event GetCommentCompletedEventHandler GetCommentCompleted;
        
        /// <remarks/>
        public event GetNewsCompletedEventHandler GetNewsCompleted;
        
        /// <remarks/>
        public event GetAccountObjectCompletedEventHandler GetAccountObjectCompleted;
        
        /// <remarks/>
        public event GetIGAuthenticationKeyCompletedEventHandler GetIGAuthenticationKeyCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetCommentDataSet", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCommentDataSet() {
            object[] results = this.Invoke("GetCommentDataSet", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCommentDataSetAsync() {
            this.GetCommentDataSetAsync(null);
        }
        
        /// <remarks/>
        public void GetCommentDataSetAsync(object userState) {
            if ((this.GetCommentDataSetOperationCompleted == null)) {
                this.GetCommentDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommentDataSetOperationCompleted);
            }
            this.InvokeAsync("GetCommentDataSet", new object[0], this.GetCommentDataSetOperationCompleted, userState);
        }
        
        private void OnGetCommentDataSetOperationCompleted(object arg) {
            if ((this.GetCommentDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommentDataSetCompleted(this, new GetCommentDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetDealBlotterDataSet", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDealBlotterDataSet(string UserID, string PWD) {
            object[] results = this.Invoke("GetDealBlotterDataSet", new object[] {
                        UserID,
                        PWD});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDealBlotterDataSetAsync(string UserID, string PWD) {
            this.GetDealBlotterDataSetAsync(UserID, PWD, null);
        }
        
        /// <remarks/>
        public void GetDealBlotterDataSetAsync(string UserID, string PWD, object userState) {
            if ((this.GetDealBlotterDataSetOperationCompleted == null)) {
                this.GetDealBlotterDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDealBlotterDataSetOperationCompleted);
            }
            this.InvokeAsync("GetDealBlotterDataSet", new object[] {
                        UserID,
                        PWD}, this.GetDealBlotterDataSetOperationCompleted, userState);
        }
        
        private void OnGetDealBlotterDataSetOperationCompleted(object arg) {
            if ((this.GetDealBlotterDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDealBlotterDataSetCompleted(this, new GetDealBlotterDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetDealBlotterDataSetWithFilter", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDealBlotterDataSetWithFilter(string UserID, string PWD, string Status) {
            object[] results = this.Invoke("GetDealBlotterDataSetWithFilter", new object[] {
                        UserID,
                        PWD,
                        Status});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDealBlotterDataSetWithFilterAsync(string UserID, string PWD, string Status) {
            this.GetDealBlotterDataSetWithFilterAsync(UserID, PWD, Status, null);
        }
        
        /// <remarks/>
        public void GetDealBlotterDataSetWithFilterAsync(string UserID, string PWD, string Status, object userState) {
            if ((this.GetDealBlotterDataSetWithFilterOperationCompleted == null)) {
                this.GetDealBlotterDataSetWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDealBlotterDataSetWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetDealBlotterDataSetWithFilter", new object[] {
                        UserID,
                        PWD,
                        Status}, this.GetDealBlotterDataSetWithFilterOperationCompleted, userState);
        }
        
        private void OnGetDealBlotterDataSetWithFilterOperationCompleted(object arg) {
            if ((this.GetDealBlotterDataSetWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDealBlotterDataSetWithFilterCompleted(this, new GetDealBlotterDataSetWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetDelayedRatesDataSet", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDelayedRatesDataSet() {
            object[] results = this.Invoke("GetDelayedRatesDataSet", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDelayedRatesDataSetAsync() {
            this.GetDelayedRatesDataSetAsync(null);
        }
        
        /// <remarks/>
        public void GetDelayedRatesDataSetAsync(object userState) {
            if ((this.GetDelayedRatesDataSetOperationCompleted == null)) {
                this.GetDelayedRatesDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDelayedRatesDataSetOperationCompleted);
            }
            this.InvokeAsync("GetDelayedRatesDataSet", new object[0], this.GetDelayedRatesDataSetOperationCompleted, userState);
        }
        
        private void OnGetDelayedRatesDataSetOperationCompleted(object arg) {
            if ((this.GetDelayedRatesDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDelayedRatesDataSetCompleted(this, new GetDelayedRatesDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetMarginBlotterDataSet", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMarginBlotterDataSet(string UserID, string PWD) {
            object[] results = this.Invoke("GetMarginBlotterDataSet", new object[] {
                        UserID,
                        PWD});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMarginBlotterDataSetAsync(string UserID, string PWD) {
            this.GetMarginBlotterDataSetAsync(UserID, PWD, null);
        }
        
        /// <remarks/>
        public void GetMarginBlotterDataSetAsync(string UserID, string PWD, object userState) {
            if ((this.GetMarginBlotterDataSetOperationCompleted == null)) {
                this.GetMarginBlotterDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMarginBlotterDataSetOperationCompleted);
            }
            this.InvokeAsync("GetMarginBlotterDataSet", new object[] {
                        UserID,
                        PWD}, this.GetMarginBlotterDataSetOperationCompleted, userState);
        }
        
        private void OnGetMarginBlotterDataSetOperationCompleted(object arg) {
            if ((this.GetMarginBlotterDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMarginBlotterDataSetCompleted(this, new GetMarginBlotterDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetCustomMarginBlotter", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCustomMarginBlotter(string Key) {
            object[] results = this.Invoke("GetCustomMarginBlotter", new object[] {
                        Key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomMarginBlotterAsync(string Key) {
            this.GetCustomMarginBlotterAsync(Key, null);
        }
        
        /// <remarks/>
        public void GetCustomMarginBlotterAsync(string Key, object userState) {
            if ((this.GetCustomMarginBlotterOperationCompleted == null)) {
                this.GetCustomMarginBlotterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomMarginBlotterOperationCompleted);
            }
            this.InvokeAsync("GetCustomMarginBlotter", new object[] {
                        Key}, this.GetCustomMarginBlotterOperationCompleted, userState);
        }
        
        private void OnGetCustomMarginBlotterOperationCompleted(object arg) {
            if ((this.GetCustomMarginBlotterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomMarginBlotterCompleted(this, new GetCustomMarginBlotterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetCustomPositionBlotter", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCustomPositionBlotter(string Key) {
            object[] results = this.Invoke("GetCustomPositionBlotter", new object[] {
                        Key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomPositionBlotterAsync(string Key) {
            this.GetCustomPositionBlotterAsync(Key, null);
        }
        
        /// <remarks/>
        public void GetCustomPositionBlotterAsync(string Key, object userState) {
            if ((this.GetCustomPositionBlotterOperationCompleted == null)) {
                this.GetCustomPositionBlotterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomPositionBlotterOperationCompleted);
            }
            this.InvokeAsync("GetCustomPositionBlotter", new object[] {
                        Key}, this.GetCustomPositionBlotterOperationCompleted, userState);
        }
        
        private void OnGetCustomPositionBlotterOperationCompleted(object arg) {
            if ((this.GetCustomPositionBlotterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomPositionBlotterCompleted(this, new GetCustomPositionBlotterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetNewsDataSet", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetNewsDataSet() {
            object[] results = this.Invoke("GetNewsDataSet", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewsDataSetAsync() {
            this.GetNewsDataSetAsync(null);
        }
        
        /// <remarks/>
        public void GetNewsDataSetAsync(object userState) {
            if ((this.GetNewsDataSetOperationCompleted == null)) {
                this.GetNewsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewsDataSetOperationCompleted);
            }
            this.InvokeAsync("GetNewsDataSet", new object[0], this.GetNewsDataSetOperationCompleted, userState);
        }
        
        private void OnGetNewsDataSetOperationCompleted(object arg) {
            if ((this.GetNewsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewsDataSetCompleted(this, new GetNewsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetOrderBlotterDataSet", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOrderBlotterDataSet(string UserID, string PWD) {
            object[] results = this.Invoke("GetOrderBlotterDataSet", new object[] {
                        UserID,
                        PWD});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderBlotterDataSetAsync(string UserID, string PWD) {
            this.GetOrderBlotterDataSetAsync(UserID, PWD, null);
        }
        
        /// <remarks/>
        public void GetOrderBlotterDataSetAsync(string UserID, string PWD, object userState) {
            if ((this.GetOrderBlotterDataSetOperationCompleted == null)) {
                this.GetOrderBlotterDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderBlotterDataSetOperationCompleted);
            }
            this.InvokeAsync("GetOrderBlotterDataSet", new object[] {
                        UserID,
                        PWD}, this.GetOrderBlotterDataSetOperationCompleted, userState);
        }
        
        private void OnGetOrderBlotterDataSetOperationCompleted(object arg) {
            if ((this.GetOrderBlotterDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderBlotterDataSetCompleted(this, new GetOrderBlotterDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetPositionBlotterDataSet", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPositionBlotterDataSet(string UserID, string PWD) {
            object[] results = this.Invoke("GetPositionBlotterDataSet", new object[] {
                        UserID,
                        PWD});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPositionBlotterDataSetAsync(string UserID, string PWD) {
            this.GetPositionBlotterDataSetAsync(UserID, PWD, null);
        }
        
        /// <remarks/>
        public void GetPositionBlotterDataSetAsync(string UserID, string PWD, object userState) {
            if ((this.GetPositionBlotterDataSetOperationCompleted == null)) {
                this.GetPositionBlotterDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPositionBlotterDataSetOperationCompleted);
            }
            this.InvokeAsync("GetPositionBlotterDataSet", new object[] {
                        UserID,
                        PWD}, this.GetPositionBlotterDataSetOperationCompleted, userState);
        }
        
        private void OnGetPositionBlotterDataSetOperationCompleted(object arg) {
            if ((this.GetPositionBlotterDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPositionBlotterDataSetCompleted(this, new GetPositionBlotterDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetRatesBlotter", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRatesBlotter(string Key) {
            object[] results = this.Invoke("GetRatesBlotter", new object[] {
                        Key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRatesBlotterAsync(string Key) {
            this.GetRatesBlotterAsync(Key, null);
        }
        
        /// <remarks/>
        public void GetRatesBlotterAsync(string Key, object userState) {
            if ((this.GetRatesBlotterOperationCompleted == null)) {
                this.GetRatesBlotterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRatesBlotterOperationCompleted);
            }
            this.InvokeAsync("GetRatesBlotter", new object[] {
                        Key}, this.GetRatesBlotterOperationCompleted, userState);
        }
        
        private void OnGetRatesBlotterOperationCompleted(object arg) {
            if ((this.GetRatesBlotterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRatesBlotterCompleted(this, new GetRatesBlotterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetRates", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRates(string Key) {
            object[] results = this.Invoke("GetRates", new object[] {
                        Key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRatesAsync(string Key) {
            this.GetRatesAsync(Key, null);
        }
        
        /// <remarks/>
        public void GetRatesAsync(string Key, object userState) {
            if ((this.GetRatesOperationCompleted == null)) {
                this.GetRatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRatesOperationCompleted);
            }
            this.InvokeAsync("GetRates", new object[] {
                        Key}, this.GetRatesOperationCompleted, userState);
        }
        
        private void OnGetRatesOperationCompleted(object arg) {
            if ((this.GetRatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRatesCompleted(this, new GetRatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetRatesDataSet", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRatesDataSet(string Key) {
            object[] results = this.Invoke("GetRatesDataSet", new object[] {
                        Key});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRatesDataSetAsync(string Key) {
            this.GetRatesDataSetAsync(Key, null);
        }
        
        /// <remarks/>
        public void GetRatesDataSetAsync(string Key, object userState) {
            if ((this.GetRatesDataSetOperationCompleted == null)) {
                this.GetRatesDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRatesDataSetOperationCompleted);
            }
            this.InvokeAsync("GetRatesDataSet", new object[] {
                        Key}, this.GetRatesDataSetOperationCompleted, userState);
        }
        
        private void OnGetRatesDataSetOperationCompleted(object arg) {
            if ((this.GetRatesDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRatesDataSetCompleted(this, new GetRatesDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetHistoricRatesDataSet", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetHistoricRatesDataSet(string Key, string Quote, string StartDateTime, string EndDateTime) {
            object[] results = this.Invoke("GetHistoricRatesDataSet", new object[] {
                        Key,
                        Quote,
                        StartDateTime,
                        EndDateTime});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetHistoricRatesDataSetAsync(string Key, string Quote, string StartDateTime, string EndDateTime) {
            this.GetHistoricRatesDataSetAsync(Key, Quote, StartDateTime, EndDateTime, null);
        }
        
        /// <remarks/>
        public void GetHistoricRatesDataSetAsync(string Key, string Quote, string StartDateTime, string EndDateTime, object userState) {
            if ((this.GetHistoricRatesDataSetOperationCompleted == null)) {
                this.GetHistoricRatesDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHistoricRatesDataSetOperationCompleted);
            }
            this.InvokeAsync("GetHistoricRatesDataSet", new object[] {
                        Key,
                        Quote,
                        StartDateTime,
                        EndDateTime}, this.GetHistoricRatesDataSetOperationCompleted, userState);
        }
        
        private void OnGetHistoricRatesDataSetOperationCompleted(object arg) {
            if ((this.GetHistoricRatesDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHistoricRatesDataSetCompleted(this, new GetHistoricRatesDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetSymbolBlotterDataSet", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSymbolBlotterDataSet(string UserID, string PWD) {
            object[] results = this.Invoke("GetSymbolBlotterDataSet", new object[] {
                        UserID,
                        PWD});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSymbolBlotterDataSetAsync(string UserID, string PWD) {
            this.GetSymbolBlotterDataSetAsync(UserID, PWD, null);
        }
        
        /// <remarks/>
        public void GetSymbolBlotterDataSetAsync(string UserID, string PWD, object userState) {
            if ((this.GetSymbolBlotterDataSetOperationCompleted == null)) {
                this.GetSymbolBlotterDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSymbolBlotterDataSetOperationCompleted);
            }
            this.InvokeAsync("GetSymbolBlotterDataSet", new object[] {
                        UserID,
                        PWD}, this.GetSymbolBlotterDataSetOperationCompleted, userState);
        }
        
        private void OnGetSymbolBlotterDataSetOperationCompleted(object arg) {
            if ((this.GetSymbolBlotterDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSymbolBlotterDataSetCompleted(this, new GetSymbolBlotterDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetTicker", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTicker(string UserId, string PWD, string Brand, string Accounttype, string Lang) {
            object[] results = this.Invoke("GetTicker", new object[] {
                        UserId,
                        PWD,
                        Brand,
                        Accounttype,
                        Lang});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTickerAsync(string UserId, string PWD, string Brand, string Accounttype, string Lang) {
            this.GetTickerAsync(UserId, PWD, Brand, Accounttype, Lang, null);
        }
        
        /// <remarks/>
        public void GetTickerAsync(string UserId, string PWD, string Brand, string Accounttype, string Lang, object userState) {
            if ((this.GetTickerOperationCompleted == null)) {
                this.GetTickerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTickerOperationCompleted);
            }
            this.InvokeAsync("GetTicker", new object[] {
                        UserId,
                        PWD,
                        Brand,
                        Accounttype,
                        Lang}, this.GetTickerOperationCompleted, userState);
        }
        
        private void OnGetTickerOperationCompleted(object arg) {
            if ((this.GetTickerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTickerCompleted(this, new GetTickerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetEconomicCalendar", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEconomicCalendar(string UserId, string PWD, string Brand, string Lang) {
            object[] results = this.Invoke("GetEconomicCalendar", new object[] {
                        UserId,
                        PWD,
                        Brand,
                        Lang});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEconomicCalendarAsync(string UserId, string PWD, string Brand, string Lang) {
            this.GetEconomicCalendarAsync(UserId, PWD, Brand, Lang, null);
        }
        
        /// <remarks/>
        public void GetEconomicCalendarAsync(string UserId, string PWD, string Brand, string Lang, object userState) {
            if ((this.GetEconomicCalendarOperationCompleted == null)) {
                this.GetEconomicCalendarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEconomicCalendarOperationCompleted);
            }
            this.InvokeAsync("GetEconomicCalendar", new object[] {
                        UserId,
                        PWD,
                        Brand,
                        Lang}, this.GetEconomicCalendarOperationCompleted, userState);
        }
        
        private void OnGetEconomicCalendarOperationCompleted(object arg) {
            if ((this.GetEconomicCalendarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEconomicCalendarCompleted(this, new GetEconomicCalendarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetAccount", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAccount(string UserID, string PWD, string Brand) {
            object[] results = this.Invoke("GetAccount", new object[] {
                        UserID,
                        PWD,
                        Brand});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountAsync(string UserID, string PWD, string Brand) {
            this.GetAccountAsync(UserID, PWD, Brand, null);
        }
        
        /// <remarks/>
        public void GetAccountAsync(string UserID, string PWD, string Brand, object userState) {
            if ((this.GetAccountOperationCompleted == null)) {
                this.GetAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountOperationCompleted);
            }
            this.InvokeAsync("GetAccount", new object[] {
                        UserID,
                        PWD,
                        Brand}, this.GetAccountOperationCompleted, userState);
        }
        
        private void OnGetAccountOperationCompleted(object arg) {
            if ((this.GetAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountCompleted(this, new GetAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetAccountServices", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAccountServices(string UserID, string PWD, string Brand) {
            object[] results = this.Invoke("GetAccountServices", new object[] {
                        UserID,
                        PWD,
                        Brand});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountServicesAsync(string UserID, string PWD, string Brand) {
            this.GetAccountServicesAsync(UserID, PWD, Brand, null);
        }
        
        /// <remarks/>
        public void GetAccountServicesAsync(string UserID, string PWD, string Brand, object userState) {
            if ((this.GetAccountServicesOperationCompleted == null)) {
                this.GetAccountServicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountServicesOperationCompleted);
            }
            this.InvokeAsync("GetAccountServices", new object[] {
                        UserID,
                        PWD,
                        Brand}, this.GetAccountServicesOperationCompleted, userState);
        }
        
        private void OnGetAccountServicesOperationCompleted(object arg) {
            if ((this.GetAccountServicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountServicesCompleted(this, new GetAccountServicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetDealBlotter", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDealBlotter(string Key) {
            object[] results = this.Invoke("GetDealBlotter", new object[] {
                        Key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDealBlotterAsync(string Key) {
            this.GetDealBlotterAsync(Key, null);
        }
        
        /// <remarks/>
        public void GetDealBlotterAsync(string Key, object userState) {
            if ((this.GetDealBlotterOperationCompleted == null)) {
                this.GetDealBlotterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDealBlotterOperationCompleted);
            }
            this.InvokeAsync("GetDealBlotter", new object[] {
                        Key}, this.GetDealBlotterOperationCompleted, userState);
        }
        
        private void OnGetDealBlotterOperationCompleted(object arg) {
            if ((this.GetDealBlotterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDealBlotterCompleted(this, new GetDealBlotterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetDealBlotterWithFilter", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDealBlotterWithFilter(string Key, string Status) {
            object[] results = this.Invoke("GetDealBlotterWithFilter", new object[] {
                        Key,
                        Status});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDealBlotterWithFilterAsync(string Key, string Status) {
            this.GetDealBlotterWithFilterAsync(Key, Status, null);
        }
        
        /// <remarks/>
        public void GetDealBlotterWithFilterAsync(string Key, string Status, object userState) {
            if ((this.GetDealBlotterWithFilterOperationCompleted == null)) {
                this.GetDealBlotterWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDealBlotterWithFilterOperationCompleted);
            }
            this.InvokeAsync("GetDealBlotterWithFilter", new object[] {
                        Key,
                        Status}, this.GetDealBlotterWithFilterOperationCompleted, userState);
        }
        
        private void OnGetDealBlotterWithFilterOperationCompleted(object arg) {
            if ((this.GetDealBlotterWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDealBlotterWithFilterCompleted(this, new GetDealBlotterWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetMarginBlotter", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMarginBlotter(string Key) {
            object[] results = this.Invoke("GetMarginBlotter", new object[] {
                        Key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMarginBlotterAsync(string Key) {
            this.GetMarginBlotterAsync(Key, null);
        }
        
        /// <remarks/>
        public void GetMarginBlotterAsync(string Key, object userState) {
            if ((this.GetMarginBlotterOperationCompleted == null)) {
                this.GetMarginBlotterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMarginBlotterOperationCompleted);
            }
            this.InvokeAsync("GetMarginBlotter", new object[] {
                        Key}, this.GetMarginBlotterOperationCompleted, userState);
        }
        
        private void OnGetMarginBlotterOperationCompleted(object arg) {
            if ((this.GetMarginBlotterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMarginBlotterCompleted(this, new GetMarginBlotterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetOrderBlotter", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOrderBlotter(string Key) {
            object[] results = this.Invoke("GetOrderBlotter", new object[] {
                        Key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderBlotterAsync(string Key) {
            this.GetOrderBlotterAsync(Key, null);
        }
        
        /// <remarks/>
        public void GetOrderBlotterAsync(string Key, object userState) {
            if ((this.GetOrderBlotterOperationCompleted == null)) {
                this.GetOrderBlotterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderBlotterOperationCompleted);
            }
            this.InvokeAsync("GetOrderBlotter", new object[] {
                        Key}, this.GetOrderBlotterOperationCompleted, userState);
        }
        
        private void OnGetOrderBlotterOperationCompleted(object arg) {
            if ((this.GetOrderBlotterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderBlotterCompleted(this, new GetOrderBlotterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetPositionBlotter", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPositionBlotter(string Key) {
            object[] results = this.Invoke("GetPositionBlotter", new object[] {
                        Key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPositionBlotterAsync(string Key) {
            this.GetPositionBlotterAsync(Key, null);
        }
        
        /// <remarks/>
        public void GetPositionBlotterAsync(string Key, object userState) {
            if ((this.GetPositionBlotterOperationCompleted == null)) {
                this.GetPositionBlotterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPositionBlotterOperationCompleted);
            }
            this.InvokeAsync("GetPositionBlotter", new object[] {
                        Key}, this.GetPositionBlotterOperationCompleted, userState);
        }
        
        private void OnGetPositionBlotterOperationCompleted(object arg) {
            if ((this.GetPositionBlotterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPositionBlotterCompleted(this, new GetPositionBlotterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetSymbolBlotter", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSymbolBlotter(string Key) {
            object[] results = this.Invoke("GetSymbolBlotter", new object[] {
                        Key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSymbolBlotterAsync(string Key) {
            this.GetSymbolBlotterAsync(Key, null);
        }
        
        /// <remarks/>
        public void GetSymbolBlotterAsync(string Key, object userState) {
            if ((this.GetSymbolBlotterOperationCompleted == null)) {
                this.GetSymbolBlotterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSymbolBlotterOperationCompleted);
            }
            this.InvokeAsync("GetSymbolBlotter", new object[] {
                        Key}, this.GetSymbolBlotterOperationCompleted, userState);
        }
        
        private void OnGetSymbolBlotterOperationCompleted(object arg) {
            if ((this.GetSymbolBlotterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSymbolBlotterCompleted(this, new GetSymbolBlotterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetPairSettings", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPairSettings(string UserId, string PWD, string Brand) {
            object[] results = this.Invoke("GetPairSettings", new object[] {
                        UserId,
                        PWD,
                        Brand});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPairSettingsAsync(string UserId, string PWD, string Brand) {
            this.GetPairSettingsAsync(UserId, PWD, Brand, null);
        }
        
        /// <remarks/>
        public void GetPairSettingsAsync(string UserId, string PWD, string Brand, object userState) {
            if ((this.GetPairSettingsOperationCompleted == null)) {
                this.GetPairSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPairSettingsOperationCompleted);
            }
            this.InvokeAsync("GetPairSettings", new object[] {
                        UserId,
                        PWD,
                        Brand}, this.GetPairSettingsOperationCompleted, userState);
        }
        
        private void OnGetPairSettingsOperationCompleted(object arg) {
            if ((this.GetPairSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPairSettingsCompleted(this, new GetPairSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetProductSubscriptionRelationshipBlotter", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProductSubscriptionRelationshipBlotter(string UserId, string PWD, string Brand) {
            object[] results = this.Invoke("GetProductSubscriptionRelationshipBlotter", new object[] {
                        UserId,
                        PWD,
                        Brand});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductSubscriptionRelationshipBlotterAsync(string UserId, string PWD, string Brand) {
            this.GetProductSubscriptionRelationshipBlotterAsync(UserId, PWD, Brand, null);
        }
        
        /// <remarks/>
        public void GetProductSubscriptionRelationshipBlotterAsync(string UserId, string PWD, string Brand, object userState) {
            if ((this.GetProductSubscriptionRelationshipBlotterOperationCompleted == null)) {
                this.GetProductSubscriptionRelationshipBlotterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductSubscriptionRelationshipBlotterOperationCompleted);
            }
            this.InvokeAsync("GetProductSubscriptionRelationshipBlotter", new object[] {
                        UserId,
                        PWD,
                        Brand}, this.GetProductSubscriptionRelationshipBlotterOperationCompleted, userState);
        }
        
        private void OnGetProductSubscriptionRelationshipBlotterOperationCompleted(object arg) {
            if ((this.GetProductSubscriptionRelationshipBlotterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductSubscriptionRelationshipBlotterCompleted(this, new GetProductSubscriptionRelationshipBlotterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetProductSubscriptionRelationshipBlotterDa" +
            "taset", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProductSubscriptionRelationshipBlotterDataset(string UserId, string PWD, string Brand) {
            object[] results = this.Invoke("GetProductSubscriptionRelationshipBlotterDataset", new object[] {
                        UserId,
                        PWD,
                        Brand});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductSubscriptionRelationshipBlotterDatasetAsync(string UserId, string PWD, string Brand) {
            this.GetProductSubscriptionRelationshipBlotterDatasetAsync(UserId, PWD, Brand, null);
        }
        
        /// <remarks/>
        public void GetProductSubscriptionRelationshipBlotterDatasetAsync(string UserId, string PWD, string Brand, object userState) {
            if ((this.GetProductSubscriptionRelationshipBlotterDatasetOperationCompleted == null)) {
                this.GetProductSubscriptionRelationshipBlotterDatasetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductSubscriptionRelationshipBlotterDatasetOperationCompleted);
            }
            this.InvokeAsync("GetProductSubscriptionRelationshipBlotterDataset", new object[] {
                        UserId,
                        PWD,
                        Brand}, this.GetProductSubscriptionRelationshipBlotterDatasetOperationCompleted, userState);
        }
        
        private void OnGetProductSubscriptionRelationshipBlotterDatasetOperationCompleted(object arg) {
            if ((this.GetProductSubscriptionRelationshipBlotterDatasetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductSubscriptionRelationshipBlotterDatasetCompleted(this, new GetProductSubscriptionRelationshipBlotterDatasetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/SaveUserProductSubscriptionSettings", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public objProductSubscriptionResponse SaveUserProductSubscriptionSettings(string UserId, string PWD, string Brand, string ProductList) {
            object[] results = this.Invoke("SaveUserProductSubscriptionSettings", new object[] {
                        UserId,
                        PWD,
                        Brand,
                        ProductList});
            return ((objProductSubscriptionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SaveUserProductSubscriptionSettingsAsync(string UserId, string PWD, string Brand, string ProductList) {
            this.SaveUserProductSubscriptionSettingsAsync(UserId, PWD, Brand, ProductList, null);
        }
        
        /// <remarks/>
        public void SaveUserProductSubscriptionSettingsAsync(string UserId, string PWD, string Brand, string ProductList, object userState) {
            if ((this.SaveUserProductSubscriptionSettingsOperationCompleted == null)) {
                this.SaveUserProductSubscriptionSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveUserProductSubscriptionSettingsOperationCompleted);
            }
            this.InvokeAsync("SaveUserProductSubscriptionSettings", new object[] {
                        UserId,
                        PWD,
                        Brand,
                        ProductList}, this.SaveUserProductSubscriptionSettingsOperationCompleted, userState);
        }
        
        private void OnSaveUserProductSubscriptionSettingsOperationCompleted(object arg) {
            if ((this.SaveUserProductSubscriptionSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveUserProductSubscriptionSettingsCompleted(this, new SaveUserProductSubscriptionSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/PlaceSingleOrder", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public objPlaceOrderResponse PlaceSingleOrder(string UserID, string PWD, string Pair, string Expiry, string BuySell, string Amount, string Rate, string OrderBasis) {
            object[] results = this.Invoke("PlaceSingleOrder", new object[] {
                        UserID,
                        PWD,
                        Pair,
                        Expiry,
                        BuySell,
                        Amount,
                        Rate,
                        OrderBasis});
            return ((objPlaceOrderResponse)(results[0]));
        }
        
        /// <remarks/>
        public void PlaceSingleOrderAsync(string UserID, string PWD, string Pair, string Expiry, string BuySell, string Amount, string Rate, string OrderBasis) {
            this.PlaceSingleOrderAsync(UserID, PWD, Pair, Expiry, BuySell, Amount, Rate, OrderBasis, null);
        }
        
        /// <remarks/>
        public void PlaceSingleOrderAsync(string UserID, string PWD, string Pair, string Expiry, string BuySell, string Amount, string Rate, string OrderBasis, object userState) {
            if ((this.PlaceSingleOrderOperationCompleted == null)) {
                this.PlaceSingleOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPlaceSingleOrderOperationCompleted);
            }
            this.InvokeAsync("PlaceSingleOrder", new object[] {
                        UserID,
                        PWD,
                        Pair,
                        Expiry,
                        BuySell,
                        Amount,
                        Rate,
                        OrderBasis}, this.PlaceSingleOrderOperationCompleted, userState);
        }
        
        private void OnPlaceSingleOrderOperationCompleted(object arg) {
            if ((this.PlaceSingleOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PlaceSingleOrderCompleted(this, new PlaceSingleOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/ModifySingleOrder", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public objPlaceOrderResponse ModifySingleOrder(string UserID, string PWD, string OrderReference, string Expiry, string BuySell, string Amount, string Rate, string OrderBasis) {
            object[] results = this.Invoke("ModifySingleOrder", new object[] {
                        UserID,
                        PWD,
                        OrderReference,
                        Expiry,
                        BuySell,
                        Amount,
                        Rate,
                        OrderBasis});
            return ((objPlaceOrderResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ModifySingleOrderAsync(string UserID, string PWD, string OrderReference, string Expiry, string BuySell, string Amount, string Rate, string OrderBasis) {
            this.ModifySingleOrderAsync(UserID, PWD, OrderReference, Expiry, BuySell, Amount, Rate, OrderBasis, null);
        }
        
        /// <remarks/>
        public void ModifySingleOrderAsync(string UserID, string PWD, string OrderReference, string Expiry, string BuySell, string Amount, string Rate, string OrderBasis, object userState) {
            if ((this.ModifySingleOrderOperationCompleted == null)) {
                this.ModifySingleOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifySingleOrderOperationCompleted);
            }
            this.InvokeAsync("ModifySingleOrder", new object[] {
                        UserID,
                        PWD,
                        OrderReference,
                        Expiry,
                        BuySell,
                        Amount,
                        Rate,
                        OrderBasis}, this.ModifySingleOrderOperationCompleted, userState);
        }
        
        private void OnModifySingleOrderOperationCompleted(object arg) {
            if ((this.ModifySingleOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifySingleOrderCompleted(this, new ModifySingleOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/PlaceOCOOrder", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public objPlaceOrderResponse PlaceOCOOrder(string UserID, string PWD, string Pair, string Expiry, string BuySell, string Amount, string Rate, string OrderBasis, string BuySell1, string Amount1, string Rate1, string OrderBasis1) {
            object[] results = this.Invoke("PlaceOCOOrder", new object[] {
                        UserID,
                        PWD,
                        Pair,
                        Expiry,
                        BuySell,
                        Amount,
                        Rate,
                        OrderBasis,
                        BuySell1,
                        Amount1,
                        Rate1,
                        OrderBasis1});
            return ((objPlaceOrderResponse)(results[0]));
        }
        
        /// <remarks/>
        public void PlaceOCOOrderAsync(string UserID, string PWD, string Pair, string Expiry, string BuySell, string Amount, string Rate, string OrderBasis, string BuySell1, string Amount1, string Rate1, string OrderBasis1) {
            this.PlaceOCOOrderAsync(UserID, PWD, Pair, Expiry, BuySell, Amount, Rate, OrderBasis, BuySell1, Amount1, Rate1, OrderBasis1, null);
        }
        
        /// <remarks/>
        public void PlaceOCOOrderAsync(string UserID, string PWD, string Pair, string Expiry, string BuySell, string Amount, string Rate, string OrderBasis, string BuySell1, string Amount1, string Rate1, string OrderBasis1, object userState) {
            if ((this.PlaceOCOOrderOperationCompleted == null)) {
                this.PlaceOCOOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPlaceOCOOrderOperationCompleted);
            }
            this.InvokeAsync("PlaceOCOOrder", new object[] {
                        UserID,
                        PWD,
                        Pair,
                        Expiry,
                        BuySell,
                        Amount,
                        Rate,
                        OrderBasis,
                        BuySell1,
                        Amount1,
                        Rate1,
                        OrderBasis1}, this.PlaceOCOOrderOperationCompleted, userState);
        }
        
        private void OnPlaceOCOOrderOperationCompleted(object arg) {
            if ((this.PlaceOCOOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PlaceOCOOrderCompleted(this, new PlaceOCOOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/ModifyOCOOrder", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public objPlaceOrderResponse ModifyOCOOrder(string UserID, string PWD, string OrderReference, string Expiry, string BuySell, string Amount, string Rate, string OrderBasis, string BuySell1, string Amount1, string Rate1, string OrderBasis1) {
            object[] results = this.Invoke("ModifyOCOOrder", new object[] {
                        UserID,
                        PWD,
                        OrderReference,
                        Expiry,
                        BuySell,
                        Amount,
                        Rate,
                        OrderBasis,
                        BuySell1,
                        Amount1,
                        Rate1,
                        OrderBasis1});
            return ((objPlaceOrderResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyOCOOrderAsync(string UserID, string PWD, string OrderReference, string Expiry, string BuySell, string Amount, string Rate, string OrderBasis, string BuySell1, string Amount1, string Rate1, string OrderBasis1) {
            this.ModifyOCOOrderAsync(UserID, PWD, OrderReference, Expiry, BuySell, Amount, Rate, OrderBasis, BuySell1, Amount1, Rate1, OrderBasis1, null);
        }
        
        /// <remarks/>
        public void ModifyOCOOrderAsync(string UserID, string PWD, string OrderReference, string Expiry, string BuySell, string Amount, string Rate, string OrderBasis, string BuySell1, string Amount1, string Rate1, string OrderBasis1, object userState) {
            if ((this.ModifyOCOOrderOperationCompleted == null)) {
                this.ModifyOCOOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyOCOOrderOperationCompleted);
            }
            this.InvokeAsync("ModifyOCOOrder", new object[] {
                        UserID,
                        PWD,
                        OrderReference,
                        Expiry,
                        BuySell,
                        Amount,
                        Rate,
                        OrderBasis,
                        BuySell1,
                        Amount1,
                        Rate1,
                        OrderBasis1}, this.ModifyOCOOrderOperationCompleted, userState);
        }
        
        private void OnModifyOCOOrderOperationCompleted(object arg) {
            if ((this.ModifyOCOOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyOCOOrderCompleted(this, new ModifyOCOOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/CancelOrder", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public objPlaceOrderResponse CancelOrder(string UserID, string PWD, string OrderConfirmation) {
            object[] results = this.Invoke("CancelOrder", new object[] {
                        UserID,
                        PWD,
                        OrderConfirmation});
            return ((objPlaceOrderResponse)(results[0]));
        }
        
        /// <remarks/>
        public void CancelOrderAsync(string UserID, string PWD, string OrderConfirmation) {
            this.CancelOrderAsync(UserID, PWD, OrderConfirmation, null);
        }
        
        /// <remarks/>
        public void CancelOrderAsync(string UserID, string PWD, string OrderConfirmation, object userState) {
            if ((this.CancelOrderOperationCompleted == null)) {
                this.CancelOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelOrderOperationCompleted);
            }
            this.InvokeAsync("CancelOrder", new object[] {
                        UserID,
                        PWD,
                        OrderConfirmation}, this.CancelOrderOperationCompleted, userState);
        }
        
        private void OnCancelOrderOperationCompleted(object arg) {
            if ((this.CancelOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelOrderCompleted(this, new CancelOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/DealRequest", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public objDealResponse DealRequest(string UserID, string PWD, string Pair, string BuySell, string Amount, string Rate) {
            object[] results = this.Invoke("DealRequest", new object[] {
                        UserID,
                        PWD,
                        Pair,
                        BuySell,
                        Amount,
                        Rate});
            return ((objDealResponse)(results[0]));
        }
        
        /// <remarks/>
        public void DealRequestAsync(string UserID, string PWD, string Pair, string BuySell, string Amount, string Rate) {
            this.DealRequestAsync(UserID, PWD, Pair, BuySell, Amount, Rate, null);
        }
        
        /// <remarks/>
        public void DealRequestAsync(string UserID, string PWD, string Pair, string BuySell, string Amount, string Rate, object userState) {
            if ((this.DealRequestOperationCompleted == null)) {
                this.DealRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDealRequestOperationCompleted);
            }
            this.InvokeAsync("DealRequest", new object[] {
                        UserID,
                        PWD,
                        Pair,
                        BuySell,
                        Amount,
                        Rate}, this.DealRequestOperationCompleted, userState);
        }
        
        private void OnDealRequestOperationCompleted(object arg) {
            if ((this.DealRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DealRequestCompleted(this, new DealRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/DealRequestByDealId", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public objDealResponse DealRequestByDealId(string UserID, string PWD, string Pair, string BuySell, string Amount, string Rate, string DealID) {
            object[] results = this.Invoke("DealRequestByDealId", new object[] {
                        UserID,
                        PWD,
                        Pair,
                        BuySell,
                        Amount,
                        Rate,
                        DealID});
            return ((objDealResponse)(results[0]));
        }
        
        /// <remarks/>
        public void DealRequestByDealIdAsync(string UserID, string PWD, string Pair, string BuySell, string Amount, string Rate, string DealID) {
            this.DealRequestByDealIdAsync(UserID, PWD, Pair, BuySell, Amount, Rate, DealID, null);
        }
        
        /// <remarks/>
        public void DealRequestByDealIdAsync(string UserID, string PWD, string Pair, string BuySell, string Amount, string Rate, string DealID, object userState) {
            if ((this.DealRequestByDealIdOperationCompleted == null)) {
                this.DealRequestByDealIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDealRequestByDealIdOperationCompleted);
            }
            this.InvokeAsync("DealRequestByDealId", new object[] {
                        UserID,
                        PWD,
                        Pair,
                        BuySell,
                        Amount,
                        Rate,
                        DealID}, this.DealRequestByDealIdOperationCompleted, userState);
        }
        
        private void OnDealRequestByDealIdOperationCompleted(object arg) {
            if ((this.DealRequestByDealIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DealRequestByDealIdCompleted(this, new DealRequestByDealIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/DealRequestAtBest", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public objDealResponse DealRequestAtBest(string UserID, string PWD, string Pair, string BuySell, string Amount) {
            object[] results = this.Invoke("DealRequestAtBest", new object[] {
                        UserID,
                        PWD,
                        Pair,
                        BuySell,
                        Amount});
            return ((objDealResponse)(results[0]));
        }
        
        /// <remarks/>
        public void DealRequestAtBestAsync(string UserID, string PWD, string Pair, string BuySell, string Amount) {
            this.DealRequestAtBestAsync(UserID, PWD, Pair, BuySell, Amount, null);
        }
        
        /// <remarks/>
        public void DealRequestAtBestAsync(string UserID, string PWD, string Pair, string BuySell, string Amount, object userState) {
            if ((this.DealRequestAtBestOperationCompleted == null)) {
                this.DealRequestAtBestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDealRequestAtBestOperationCompleted);
            }
            this.InvokeAsync("DealRequestAtBest", new object[] {
                        UserID,
                        PWD,
                        Pair,
                        BuySell,
                        Amount}, this.DealRequestAtBestOperationCompleted, userState);
        }
        
        private void OnDealRequestAtBestOperationCompleted(object arg) {
            if ((this.DealRequestAtBestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DealRequestAtBestCompleted(this, new DealRequestAtBestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/CancelOrderByOrderID", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public objPlaceOrderResponse CancelOrderByOrderID(string UserID, string PWD, string OrderReference) {
            object[] results = this.Invoke("CancelOrderByOrderID", new object[] {
                        UserID,
                        PWD,
                        OrderReference});
            return ((objPlaceOrderResponse)(results[0]));
        }
        
        /// <remarks/>
        public void CancelOrderByOrderIDAsync(string UserID, string PWD, string OrderReference) {
            this.CancelOrderByOrderIDAsync(UserID, PWD, OrderReference, null);
        }
        
        /// <remarks/>
        public void CancelOrderByOrderIDAsync(string UserID, string PWD, string OrderReference, object userState) {
            if ((this.CancelOrderByOrderIDOperationCompleted == null)) {
                this.CancelOrderByOrderIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelOrderByOrderIDOperationCompleted);
            }
            this.InvokeAsync("CancelOrderByOrderID", new object[] {
                        UserID,
                        PWD,
                        OrderReference}, this.CancelOrderByOrderIDOperationCompleted, userState);
        }
        
        private void OnCancelOrderByOrderIDOperationCompleted(object arg) {
            if ((this.CancelOrderByOrderIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelOrderByOrderIDCompleted(this, new CancelOrderByOrderIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/CancelOrderByReferenceNumber", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public objPlaceOrderResponse CancelOrderByReferenceNumber(string UserID, string PWD, string OrderReference) {
            object[] results = this.Invoke("CancelOrderByReferenceNumber", new object[] {
                        UserID,
                        PWD,
                        OrderReference});
            return ((objPlaceOrderResponse)(results[0]));
        }
        
        /// <remarks/>
        public void CancelOrderByReferenceNumberAsync(string UserID, string PWD, string OrderReference) {
            this.CancelOrderByReferenceNumberAsync(UserID, PWD, OrderReference, null);
        }
        
        /// <remarks/>
        public void CancelOrderByReferenceNumberAsync(string UserID, string PWD, string OrderReference, object userState) {
            if ((this.CancelOrderByReferenceNumberOperationCompleted == null)) {
                this.CancelOrderByReferenceNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelOrderByReferenceNumberOperationCompleted);
            }
            this.InvokeAsync("CancelOrderByReferenceNumber", new object[] {
                        UserID,
                        PWD,
                        OrderReference}, this.CancelOrderByReferenceNumberOperationCompleted, userState);
        }
        
        private void OnCancelOrderByReferenceNumberOperationCompleted(object arg) {
            if ((this.CancelOrderByReferenceNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelOrderByReferenceNumberCompleted(this, new CancelOrderByReferenceNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/PlaceIfThenOrder", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public objPlaceOrderResponse PlaceIfThenOrder(string UserID, string PWD, string Pair, string Expiry, string BuySell, string Amount, string Rate, string OrderBasis, string BuySell1, string Amount1, string Rate1, string OrderBasis1) {
            object[] results = this.Invoke("PlaceIfThenOrder", new object[] {
                        UserID,
                        PWD,
                        Pair,
                        Expiry,
                        BuySell,
                        Amount,
                        Rate,
                        OrderBasis,
                        BuySell1,
                        Amount1,
                        Rate1,
                        OrderBasis1});
            return ((objPlaceOrderResponse)(results[0]));
        }
        
        /// <remarks/>
        public void PlaceIfThenOrderAsync(string UserID, string PWD, string Pair, string Expiry, string BuySell, string Amount, string Rate, string OrderBasis, string BuySell1, string Amount1, string Rate1, string OrderBasis1) {
            this.PlaceIfThenOrderAsync(UserID, PWD, Pair, Expiry, BuySell, Amount, Rate, OrderBasis, BuySell1, Amount1, Rate1, OrderBasis1, null);
        }
        
        /// <remarks/>
        public void PlaceIfThenOrderAsync(string UserID, string PWD, string Pair, string Expiry, string BuySell, string Amount, string Rate, string OrderBasis, string BuySell1, string Amount1, string Rate1, string OrderBasis1, object userState) {
            if ((this.PlaceIfThenOrderOperationCompleted == null)) {
                this.PlaceIfThenOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPlaceIfThenOrderOperationCompleted);
            }
            this.InvokeAsync("PlaceIfThenOrder", new object[] {
                        UserID,
                        PWD,
                        Pair,
                        Expiry,
                        BuySell,
                        Amount,
                        Rate,
                        OrderBasis,
                        BuySell1,
                        Amount1,
                        Rate1,
                        OrderBasis1}, this.PlaceIfThenOrderOperationCompleted, userState);
        }
        
        private void OnPlaceIfThenOrderOperationCompleted(object arg) {
            if ((this.PlaceIfThenOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PlaceIfThenOrderCompleted(this, new PlaceIfThenOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/ModifyIfThenOrder", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public objPlaceOrderResponse ModifyIfThenOrder(string UserID, string PWD, string OrderReference, string Expiry, string BuySell, string Amount, string Rate, string OrderBasis, string BuySell1, string Amount1, string Rate1, string OrderBasis1) {
            object[] results = this.Invoke("ModifyIfThenOrder", new object[] {
                        UserID,
                        PWD,
                        OrderReference,
                        Expiry,
                        BuySell,
                        Amount,
                        Rate,
                        OrderBasis,
                        BuySell1,
                        Amount1,
                        Rate1,
                        OrderBasis1});
            return ((objPlaceOrderResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyIfThenOrderAsync(string UserID, string PWD, string OrderReference, string Expiry, string BuySell, string Amount, string Rate, string OrderBasis, string BuySell1, string Amount1, string Rate1, string OrderBasis1) {
            this.ModifyIfThenOrderAsync(UserID, PWD, OrderReference, Expiry, BuySell, Amount, Rate, OrderBasis, BuySell1, Amount1, Rate1, OrderBasis1, null);
        }
        
        /// <remarks/>
        public void ModifyIfThenOrderAsync(string UserID, string PWD, string OrderReference, string Expiry, string BuySell, string Amount, string Rate, string OrderBasis, string BuySell1, string Amount1, string Rate1, string OrderBasis1, object userState) {
            if ((this.ModifyIfThenOrderOperationCompleted == null)) {
                this.ModifyIfThenOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyIfThenOrderOperationCompleted);
            }
            this.InvokeAsync("ModifyIfThenOrder", new object[] {
                        UserID,
                        PWD,
                        OrderReference,
                        Expiry,
                        BuySell,
                        Amount,
                        Rate,
                        OrderBasis,
                        BuySell1,
                        Amount1,
                        Rate1,
                        OrderBasis1}, this.ModifyIfThenOrderOperationCompleted, userState);
        }
        
        private void OnModifyIfThenOrderOperationCompleted(object arg) {
            if ((this.ModifyIfThenOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyIfThenOrderCompleted(this, new ModifyIfThenOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/PlaceIfThenOCOOrder", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public objPlaceOrderResponse PlaceIfThenOCOOrder(
                    string UserID, 
                    string PWD, 
                    string Pair, 
                    string Expiry, 
                    string BuySell, 
                    string Amount, 
                    string Rate, 
                    string OrderBasis, 
                    string BuySell1, 
                    string Amount1, 
                    string Rate1, 
                    string OrderBasis1, 
                    string BuySell2, 
                    string Amount2, 
                    string Rate2, 
                    string OrderBasis2) {
            object[] results = this.Invoke("PlaceIfThenOCOOrder", new object[] {
                        UserID,
                        PWD,
                        Pair,
                        Expiry,
                        BuySell,
                        Amount,
                        Rate,
                        OrderBasis,
                        BuySell1,
                        Amount1,
                        Rate1,
                        OrderBasis1,
                        BuySell2,
                        Amount2,
                        Rate2,
                        OrderBasis2});
            return ((objPlaceOrderResponse)(results[0]));
        }
        
        /// <remarks/>
        public void PlaceIfThenOCOOrderAsync(
                    string UserID, 
                    string PWD, 
                    string Pair, 
                    string Expiry, 
                    string BuySell, 
                    string Amount, 
                    string Rate, 
                    string OrderBasis, 
                    string BuySell1, 
                    string Amount1, 
                    string Rate1, 
                    string OrderBasis1, 
                    string BuySell2, 
                    string Amount2, 
                    string Rate2, 
                    string OrderBasis2) {
            this.PlaceIfThenOCOOrderAsync(UserID, PWD, Pair, Expiry, BuySell, Amount, Rate, OrderBasis, BuySell1, Amount1, Rate1, OrderBasis1, BuySell2, Amount2, Rate2, OrderBasis2, null);
        }
        
        /// <remarks/>
        public void PlaceIfThenOCOOrderAsync(
                    string UserID, 
                    string PWD, 
                    string Pair, 
                    string Expiry, 
                    string BuySell, 
                    string Amount, 
                    string Rate, 
                    string OrderBasis, 
                    string BuySell1, 
                    string Amount1, 
                    string Rate1, 
                    string OrderBasis1, 
                    string BuySell2, 
                    string Amount2, 
                    string Rate2, 
                    string OrderBasis2, 
                    object userState) {
            if ((this.PlaceIfThenOCOOrderOperationCompleted == null)) {
                this.PlaceIfThenOCOOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPlaceIfThenOCOOrderOperationCompleted);
            }
            this.InvokeAsync("PlaceIfThenOCOOrder", new object[] {
                        UserID,
                        PWD,
                        Pair,
                        Expiry,
                        BuySell,
                        Amount,
                        Rate,
                        OrderBasis,
                        BuySell1,
                        Amount1,
                        Rate1,
                        OrderBasis1,
                        BuySell2,
                        Amount2,
                        Rate2,
                        OrderBasis2}, this.PlaceIfThenOCOOrderOperationCompleted, userState);
        }
        
        private void OnPlaceIfThenOCOOrderOperationCompleted(object arg) {
            if ((this.PlaceIfThenOCOOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PlaceIfThenOCOOrderCompleted(this, new PlaceIfThenOCOOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/ModifyIfThenOCOOrder", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public objPlaceOrderResponse ModifyIfThenOCOOrder(
                    string UserID, 
                    string PWD, 
                    string OrderReference, 
                    string Expiry, 
                    string BuySell, 
                    string Amount, 
                    string Rate, 
                    string OrderBasis, 
                    string BuySell1, 
                    string Amount1, 
                    string Rate1, 
                    string OrderBasis1, 
                    string BuySell2, 
                    string Amount2, 
                    string Rate2, 
                    string OrderBasis2) {
            object[] results = this.Invoke("ModifyIfThenOCOOrder", new object[] {
                        UserID,
                        PWD,
                        OrderReference,
                        Expiry,
                        BuySell,
                        Amount,
                        Rate,
                        OrderBasis,
                        BuySell1,
                        Amount1,
                        Rate1,
                        OrderBasis1,
                        BuySell2,
                        Amount2,
                        Rate2,
                        OrderBasis2});
            return ((objPlaceOrderResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyIfThenOCOOrderAsync(
                    string UserID, 
                    string PWD, 
                    string OrderReference, 
                    string Expiry, 
                    string BuySell, 
                    string Amount, 
                    string Rate, 
                    string OrderBasis, 
                    string BuySell1, 
                    string Amount1, 
                    string Rate1, 
                    string OrderBasis1, 
                    string BuySell2, 
                    string Amount2, 
                    string Rate2, 
                    string OrderBasis2) {
            this.ModifyIfThenOCOOrderAsync(UserID, PWD, OrderReference, Expiry, BuySell, Amount, Rate, OrderBasis, BuySell1, Amount1, Rate1, OrderBasis1, BuySell2, Amount2, Rate2, OrderBasis2, null);
        }
        
        /// <remarks/>
        public void ModifyIfThenOCOOrderAsync(
                    string UserID, 
                    string PWD, 
                    string OrderReference, 
                    string Expiry, 
                    string BuySell, 
                    string Amount, 
                    string Rate, 
                    string OrderBasis, 
                    string BuySell1, 
                    string Amount1, 
                    string Rate1, 
                    string OrderBasis1, 
                    string BuySell2, 
                    string Amount2, 
                    string Rate2, 
                    string OrderBasis2, 
                    object userState) {
            if ((this.ModifyIfThenOCOOrderOperationCompleted == null)) {
                this.ModifyIfThenOCOOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyIfThenOCOOrderOperationCompleted);
            }
            this.InvokeAsync("ModifyIfThenOCOOrder", new object[] {
                        UserID,
                        PWD,
                        OrderReference,
                        Expiry,
                        BuySell,
                        Amount,
                        Rate,
                        OrderBasis,
                        BuySell1,
                        Amount1,
                        Rate1,
                        OrderBasis1,
                        BuySell2,
                        Amount2,
                        Rate2,
                        OrderBasis2}, this.ModifyIfThenOCOOrderOperationCompleted, userState);
        }
        
        private void OnModifyIfThenOCOOrderOperationCompleted(object arg) {
            if ((this.ModifyIfThenOCOOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyIfThenOCOOrderCompleted(this, new ModifyIfThenOCOOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/PlaceSingleASSPOrder", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public objPlaceOrderResponse PlaceSingleASSPOrder(string UserID, string PWD, string Pair, string Rate, string OrderBasis) {
            object[] results = this.Invoke("PlaceSingleASSPOrder", new object[] {
                        UserID,
                        PWD,
                        Pair,
                        Rate,
                        OrderBasis});
            return ((objPlaceOrderResponse)(results[0]));
        }
        
        /// <remarks/>
        public void PlaceSingleASSPOrderAsync(string UserID, string PWD, string Pair, string Rate, string OrderBasis) {
            this.PlaceSingleASSPOrderAsync(UserID, PWD, Pair, Rate, OrderBasis, null);
        }
        
        /// <remarks/>
        public void PlaceSingleASSPOrderAsync(string UserID, string PWD, string Pair, string Rate, string OrderBasis, object userState) {
            if ((this.PlaceSingleASSPOrderOperationCompleted == null)) {
                this.PlaceSingleASSPOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPlaceSingleASSPOrderOperationCompleted);
            }
            this.InvokeAsync("PlaceSingleASSPOrder", new object[] {
                        UserID,
                        PWD,
                        Pair,
                        Rate,
                        OrderBasis}, this.PlaceSingleASSPOrderOperationCompleted, userState);
        }
        
        private void OnPlaceSingleASSPOrderOperationCompleted(object arg) {
            if ((this.PlaceSingleASSPOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PlaceSingleASSPOrderCompleted(this, new PlaceSingleASSPOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/ModifySingleASSPOrder", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public objPlaceOrderResponse ModifySingleASSPOrder(string UserID, string PWD, string OrderReference, string Rate, string OrderBasis) {
            object[] results = this.Invoke("ModifySingleASSPOrder", new object[] {
                        UserID,
                        PWD,
                        OrderReference,
                        Rate,
                        OrderBasis});
            return ((objPlaceOrderResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ModifySingleASSPOrderAsync(string UserID, string PWD, string OrderReference, string Rate, string OrderBasis) {
            this.ModifySingleASSPOrderAsync(UserID, PWD, OrderReference, Rate, OrderBasis, null);
        }
        
        /// <remarks/>
        public void ModifySingleASSPOrderAsync(string UserID, string PWD, string OrderReference, string Rate, string OrderBasis, object userState) {
            if ((this.ModifySingleASSPOrderOperationCompleted == null)) {
                this.ModifySingleASSPOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifySingleASSPOrderOperationCompleted);
            }
            this.InvokeAsync("ModifySingleASSPOrder", new object[] {
                        UserID,
                        PWD,
                        OrderReference,
                        Rate,
                        OrderBasis}, this.ModifySingleASSPOrderOperationCompleted, userState);
        }
        
        private void OnModifySingleASSPOrderOperationCompleted(object arg) {
            if ((this.ModifySingleASSPOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifySingleASSPOrderCompleted(this, new ModifySingleASSPOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/PlaceOCOASSPOrder", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public objPlaceOrderResponse PlaceOCOASSPOrder(string UserID, string PWD, string Pair, string LimitRate, string StopLossRate) {
            object[] results = this.Invoke("PlaceOCOASSPOrder", new object[] {
                        UserID,
                        PWD,
                        Pair,
                        LimitRate,
                        StopLossRate});
            return ((objPlaceOrderResponse)(results[0]));
        }
        
        /// <remarks/>
        public void PlaceOCOASSPOrderAsync(string UserID, string PWD, string Pair, string LimitRate, string StopLossRate) {
            this.PlaceOCOASSPOrderAsync(UserID, PWD, Pair, LimitRate, StopLossRate, null);
        }
        
        /// <remarks/>
        public void PlaceOCOASSPOrderAsync(string UserID, string PWD, string Pair, string LimitRate, string StopLossRate, object userState) {
            if ((this.PlaceOCOASSPOrderOperationCompleted == null)) {
                this.PlaceOCOASSPOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPlaceOCOASSPOrderOperationCompleted);
            }
            this.InvokeAsync("PlaceOCOASSPOrder", new object[] {
                        UserID,
                        PWD,
                        Pair,
                        LimitRate,
                        StopLossRate}, this.PlaceOCOASSPOrderOperationCompleted, userState);
        }
        
        private void OnPlaceOCOASSPOrderOperationCompleted(object arg) {
            if ((this.PlaceOCOASSPOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PlaceOCOASSPOrderCompleted(this, new PlaceOCOASSPOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticatorValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/ModifyOCOASSPOrder", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public objPlaceOrderResponse ModifyOCOASSPOrder(string UserID, string PWD, string OrderReference, string LimitRate, string StopLossRate) {
            object[] results = this.Invoke("ModifyOCOASSPOrder", new object[] {
                        UserID,
                        PWD,
                        OrderReference,
                        LimitRate,
                        StopLossRate});
            return ((objPlaceOrderResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyOCOASSPOrderAsync(string UserID, string PWD, string OrderReference, string LimitRate, string StopLossRate) {
            this.ModifyOCOASSPOrderAsync(UserID, PWD, OrderReference, LimitRate, StopLossRate, null);
        }
        
        /// <remarks/>
        public void ModifyOCOASSPOrderAsync(string UserID, string PWD, string OrderReference, string LimitRate, string StopLossRate, object userState) {
            if ((this.ModifyOCOASSPOrderOperationCompleted == null)) {
                this.ModifyOCOASSPOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyOCOASSPOrderOperationCompleted);
            }
            this.InvokeAsync("ModifyOCOASSPOrder", new object[] {
                        UserID,
                        PWD,
                        OrderReference,
                        LimitRate,
                        StopLossRate}, this.ModifyOCOASSPOrderOperationCompleted, userState);
        }
        
        private void OnModifyOCOASSPOrderOperationCompleted(object arg) {
            if ((this.ModifyOCOASSPOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyOCOASSPOrderCompleted(this, new ModifyOCOASSPOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetAccountDetails", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAccountDetails(string UserID, string PWD, string Brand, string ApplicationName, string Language) {
            object[] results = this.Invoke("GetAccountDetails", new object[] {
                        UserID,
                        PWD,
                        Brand,
                        ApplicationName,
                        Language});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountDetailsAsync(string UserID, string PWD, string Brand, string ApplicationName, string Language) {
            this.GetAccountDetailsAsync(UserID, PWD, Brand, ApplicationName, Language, null);
        }
        
        /// <remarks/>
        public void GetAccountDetailsAsync(string UserID, string PWD, string Brand, string ApplicationName, string Language, object userState) {
            if ((this.GetAccountDetailsOperationCompleted == null)) {
                this.GetAccountDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountDetailsOperationCompleted);
            }
            this.InvokeAsync("GetAccountDetails", new object[] {
                        UserID,
                        PWD,
                        Brand,
                        ApplicationName,
                        Language}, this.GetAccountDetailsOperationCompleted, userState);
        }
        
        private void OnGetAccountDetailsOperationCompleted(object arg) {
            if ((this.GetAccountDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountDetailsCompleted(this, new GetAccountDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/Echo", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Echo(string Message) {
            object[] results = this.Invoke("Echo", new object[] {
                        Message});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EchoAsync(string Message) {
            this.EchoAsync(Message, null);
        }
        
        /// <remarks/>
        public void EchoAsync(string Message, object userState) {
            if ((this.EchoOperationCompleted == null)) {
                this.EchoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEchoOperationCompleted);
            }
            this.InvokeAsync("Echo", new object[] {
                        Message}, this.EchoOperationCompleted, userState);
        }
        
        private void OnEchoOperationCompleted(object arg) {
            if ((this.EchoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EchoCompleted(this, new EchoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetTime", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTime() {
            object[] results = this.Invoke("GetTime", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTimeAsync() {
            this.GetTimeAsync(null);
        }
        
        /// <remarks/>
        public void GetTimeAsync(object userState) {
            if ((this.GetTimeOperationCompleted == null)) {
                this.GetTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTimeOperationCompleted);
            }
            this.InvokeAsync("GetTime", new object[0], this.GetTimeOperationCompleted, userState);
        }
        
        private void OnGetTimeOperationCompleted(object arg) {
            if ((this.GetTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTimeCompleted(this, new GetTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetRatesServerAuth", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRatesServerAuth(string UserID, string PWD, string Brand) {
            object[] results = this.Invoke("GetRatesServerAuth", new object[] {
                        UserID,
                        PWD,
                        Brand});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRatesServerAuthAsync(string UserID, string PWD, string Brand) {
            this.GetRatesServerAuthAsync(UserID, PWD, Brand, null);
        }
        
        /// <remarks/>
        public void GetRatesServerAuthAsync(string UserID, string PWD, string Brand, object userState) {
            if ((this.GetRatesServerAuthOperationCompleted == null)) {
                this.GetRatesServerAuthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRatesServerAuthOperationCompleted);
            }
            this.InvokeAsync("GetRatesServerAuth", new object[] {
                        UserID,
                        PWD,
                        Brand}, this.GetRatesServerAuthOperationCompleted, userState);
        }
        
        private void OnGetRatesServerAuthOperationCompleted(object arg) {
            if ((this.GetRatesServerAuthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRatesServerAuthCompleted(this, new GetRatesServerAuthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/VerifyCredentials", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool VerifyCredentials(string UserID, string PWD, string Brand) {
            object[] results = this.Invoke("VerifyCredentials", new object[] {
                        UserID,
                        PWD,
                        Brand});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyCredentialsAsync(string UserID, string PWD, string Brand) {
            this.VerifyCredentialsAsync(UserID, PWD, Brand, null);
        }
        
        /// <remarks/>
        public void VerifyCredentialsAsync(string UserID, string PWD, string Brand, object userState) {
            if ((this.VerifyCredentialsOperationCompleted == null)) {
                this.VerifyCredentialsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyCredentialsOperationCompleted);
            }
            this.InvokeAsync("VerifyCredentials", new object[] {
                        UserID,
                        PWD,
                        Brand}, this.VerifyCredentialsOperationCompleted, userState);
        }
        
        private void OnVerifyCredentialsOperationCompleted(object arg) {
            if ((this.VerifyCredentialsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyCredentialsCompleted(this, new VerifyCredentialsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetSubAccountAuthenticationKey", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSubAccountAuthenticationKey(string MasterAccountKey, string SubAccountCode) {
            object[] results = this.Invoke("GetSubAccountAuthenticationKey", new object[] {
                        MasterAccountKey,
                        SubAccountCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubAccountAuthenticationKeyAsync(string MasterAccountKey, string SubAccountCode) {
            this.GetSubAccountAuthenticationKeyAsync(MasterAccountKey, SubAccountCode, null);
        }
        
        /// <remarks/>
        public void GetSubAccountAuthenticationKeyAsync(string MasterAccountKey, string SubAccountCode, object userState) {
            if ((this.GetSubAccountAuthenticationKeyOperationCompleted == null)) {
                this.GetSubAccountAuthenticationKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubAccountAuthenticationKeyOperationCompleted);
            }
            this.InvokeAsync("GetSubAccountAuthenticationKey", new object[] {
                        MasterAccountKey,
                        SubAccountCode}, this.GetSubAccountAuthenticationKeyOperationCompleted, userState);
        }
        
        private void OnGetSubAccountAuthenticationKeyOperationCompleted(object arg) {
            if ((this.GetSubAccountAuthenticationKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubAccountAuthenticationKeyCompleted(this, new GetSubAccountAuthenticationKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetSubAccountCode", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSubAccountCode(string MasterAccountCode, string SubAccountNumber) {
            object[] results = this.Invoke("GetSubAccountCode", new object[] {
                        MasterAccountCode,
                        SubAccountNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubAccountCodeAsync(string MasterAccountCode, string SubAccountNumber) {
            this.GetSubAccountCodeAsync(MasterAccountCode, SubAccountNumber, null);
        }
        
        /// <remarks/>
        public void GetSubAccountCodeAsync(string MasterAccountCode, string SubAccountNumber, object userState) {
            if ((this.GetSubAccountCodeOperationCompleted == null)) {
                this.GetSubAccountCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubAccountCodeOperationCompleted);
            }
            this.InvokeAsync("GetSubAccountCode", new object[] {
                        MasterAccountCode,
                        SubAccountNumber}, this.GetSubAccountCodeOperationCompleted, userState);
        }
        
        private void OnGetSubAccountCodeOperationCompleted(object arg) {
            if ((this.GetSubAccountCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubAccountCodeCompleted(this, new GetSubAccountCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetSubAccountNumber", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSubAccountNumber(string MasterAccountCode, string SubAccountCode) {
            object[] results = this.Invoke("GetSubAccountNumber", new object[] {
                        MasterAccountCode,
                        SubAccountCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubAccountNumberAsync(string MasterAccountCode, string SubAccountCode) {
            this.GetSubAccountNumberAsync(MasterAccountCode, SubAccountCode, null);
        }
        
        /// <remarks/>
        public void GetSubAccountNumberAsync(string MasterAccountCode, string SubAccountCode, object userState) {
            if ((this.GetSubAccountNumberOperationCompleted == null)) {
                this.GetSubAccountNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubAccountNumberOperationCompleted);
            }
            this.InvokeAsync("GetSubAccountNumber", new object[] {
                        MasterAccountCode,
                        SubAccountCode}, this.GetSubAccountNumberOperationCompleted, userState);
        }
        
        private void OnGetSubAccountNumberOperationCompleted(object arg) {
            if ((this.GetSubAccountNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubAccountNumberCompleted(this, new GetSubAccountNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/ServiceAuthentication", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ServiceAuthentication(string UserID, string Password, string Brand, string ServiceID) {
            object[] results = this.Invoke("ServiceAuthentication", new object[] {
                        UserID,
                        Password,
                        Brand,
                        ServiceID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ServiceAuthenticationAsync(string UserID, string Password, string Brand, string ServiceID) {
            this.ServiceAuthenticationAsync(UserID, Password, Brand, ServiceID, null);
        }
        
        /// <remarks/>
        public void ServiceAuthenticationAsync(string UserID, string Password, string Brand, string ServiceID, object userState) {
            if ((this.ServiceAuthenticationOperationCompleted == null)) {
                this.ServiceAuthenticationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnServiceAuthenticationOperationCompleted);
            }
            this.InvokeAsync("ServiceAuthentication", new object[] {
                        UserID,
                        Password,
                        Brand,
                        ServiceID}, this.ServiceAuthenticationOperationCompleted, userState);
        }
        
        private void OnServiceAuthenticationOperationCompleted(object arg) {
            if ((this.ServiceAuthenticationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ServiceAuthenticationCompleted(this, new ServiceAuthenticationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetlTIDByBankConf", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetlTIDByBankConf(string BankConfirmation) {
            object[] results = this.Invoke("GetlTIDByBankConf", new object[] {
                        BankConfirmation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetlTIDByBankConfAsync(string BankConfirmation) {
            this.GetlTIDByBankConfAsync(BankConfirmation, null);
        }
        
        /// <remarks/>
        public void GetlTIDByBankConfAsync(string BankConfirmation, object userState) {
            if ((this.GetlTIDByBankConfOperationCompleted == null)) {
                this.GetlTIDByBankConfOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetlTIDByBankConfOperationCompleted);
            }
            this.InvokeAsync("GetlTIDByBankConf", new object[] {
                        BankConfirmation}, this.GetlTIDByBankConfOperationCompleted, userState);
        }
        
        private void OnGetlTIDByBankConfOperationCompleted(object arg) {
            if ((this.GetlTIDByBankConfCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetlTIDByBankConfCompleted(this, new GetlTIDByBankConfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetComment", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public objMarketText GetComment() {
            object[] results = this.Invoke("GetComment", new object[0]);
            return ((objMarketText)(results[0]));
        }
        
        /// <remarks/>
        public void GetCommentAsync() {
            this.GetCommentAsync(null);
        }
        
        /// <remarks/>
        public void GetCommentAsync(object userState) {
            if ((this.GetCommentOperationCompleted == null)) {
                this.GetCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommentOperationCompleted);
            }
            this.InvokeAsync("GetComment", new object[0], this.GetCommentOperationCompleted, userState);
        }
        
        private void OnGetCommentOperationCompleted(object arg) {
            if ((this.GetCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommentCompleted(this, new GetCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetNews", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public objMarketText GetNews() {
            object[] results = this.Invoke("GetNews", new object[0]);
            return ((objMarketText)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewsAsync() {
            this.GetNewsAsync(null);
        }
        
        /// <remarks/>
        public void GetNewsAsync(object userState) {
            if ((this.GetNewsOperationCompleted == null)) {
                this.GetNewsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewsOperationCompleted);
            }
            this.InvokeAsync("GetNews", new object[0], this.GetNewsOperationCompleted, userState);
        }
        
        private void OnGetNewsOperationCompleted(object arg) {
            if ((this.GetNewsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewsCompleted(this, new GetNewsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetAccountObject", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public objAccount GetAccountObject(string UserID, string PWD, string Brand, string Notes) {
            object[] results = this.Invoke("GetAccountObject", new object[] {
                        UserID,
                        PWD,
                        Brand,
                        Notes});
            return ((objAccount)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountObjectAsync(string UserID, string PWD, string Brand, string Notes) {
            this.GetAccountObjectAsync(UserID, PWD, Brand, Notes, null);
        }
        
        /// <remarks/>
        public void GetAccountObjectAsync(string UserID, string PWD, string Brand, string Notes, object userState) {
            if ((this.GetAccountObjectOperationCompleted == null)) {
                this.GetAccountObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountObjectOperationCompleted);
            }
            this.InvokeAsync("GetAccountObject", new object[] {
                        UserID,
                        PWD,
                        Brand,
                        Notes}, this.GetAccountObjectOperationCompleted, userState);
        }
        
        private void OnGetAccountObjectOperationCompleted(object arg) {
            if ((this.GetAccountObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountObjectCompleted(this, new GetAccountObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://api.efxnow.com/webservices2.3/GetIGAuthenticationKey", RequestNamespace="https://api.efxnow.com/webservices2.3", ResponseNamespace="https://api.efxnow.com/webservices2.3", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetIGAuthenticationKey(string UserID, string PWD, string Brand, string Language) {
            object[] results = this.Invoke("GetIGAuthenticationKey", new object[] {
                        UserID,
                        PWD,
                        Brand,
                        Language});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetIGAuthenticationKeyAsync(string UserID, string PWD, string Brand, string Language) {
            this.GetIGAuthenticationKeyAsync(UserID, PWD, Brand, Language, null);
        }
        
        /// <remarks/>
        public void GetIGAuthenticationKeyAsync(string UserID, string PWD, string Brand, string Language, object userState) {
            if ((this.GetIGAuthenticationKeyOperationCompleted == null)) {
                this.GetIGAuthenticationKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIGAuthenticationKeyOperationCompleted);
            }
            this.InvokeAsync("GetIGAuthenticationKey", new object[] {
                        UserID,
                        PWD,
                        Brand,
                        Language}, this.GetIGAuthenticationKeyOperationCompleted, userState);
        }
        
        private void OnGetIGAuthenticationKeyOperationCompleted(object arg) {
            if ((this.GetIGAuthenticationKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIGAuthenticationKeyCompleted(this, new GetIGAuthenticationKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://api.efxnow.com/webservices2.3")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="https://api.efxnow.com/webservices2.3", IsNullable=false)]
    public partial class Authenticator : System.Web.Services.Protocols.SoapHeader {
        
        private string applicationNameField;
        
        private string iPAddressField;
        
        private string userIDField;
        
        private string machineNameField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string ApplicationName {
            get {
                return this.applicationNameField;
            }
            set {
                this.applicationNameField = value;
            }
        }
        
        /// <remarks/>
        public string IPAddress {
            get {
                return this.iPAddressField;
            }
            set {
                this.iPAddressField = value;
            }
        }
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string MachineName {
            get {
                return this.machineNameField;
            }
            set {
                this.machineNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://api.efxnow.com/webservices2.3")]
    public partial class objAccount {
        
        private bool successField;
        
        private string errorDescriptionField;
        
        private string custCodeField;
        
        private string gUIDField;
        
        private int featuresField;
        
        private string baseCCYField;
        
        private long lastOrderSeqField;
        
        private long lastDealSeqField;
        
        private int orderLotSizeField;
        
        private double maxOrderPipsField;
        
        private double cancelOrderPipsField;
        
        private int tradeLotSizeField;
        
        private int maxTradeLotsField;
        
        private int tierCountField;
        
        private int tier1MinLotsField;
        
        private int tier1MaxLotsField;
        
        private int tier1PipDifferenceField;
        
        private int tier2MinLotsField;
        
        private int tier2MaxLotsField;
        
        private int tier2PipDifferenceField;
        
        private int tier3MinLotsField;
        
        private int tier3MaxLotsField;
        
        private int tier3PipDifferenceField;
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorDescription {
            get {
                return this.errorDescriptionField;
            }
            set {
                this.errorDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string CustCode {
            get {
                return this.custCodeField;
            }
            set {
                this.custCodeField = value;
            }
        }
        
        /// <remarks/>
        public string GUID {
            get {
                return this.gUIDField;
            }
            set {
                this.gUIDField = value;
            }
        }
        
        /// <remarks/>
        public int Features {
            get {
                return this.featuresField;
            }
            set {
                this.featuresField = value;
            }
        }
        
        /// <remarks/>
        public string BaseCCY {
            get {
                return this.baseCCYField;
            }
            set {
                this.baseCCYField = value;
            }
        }
        
        /// <remarks/>
        public long LastOrderSeq {
            get {
                return this.lastOrderSeqField;
            }
            set {
                this.lastOrderSeqField = value;
            }
        }
        
        /// <remarks/>
        public long LastDealSeq {
            get {
                return this.lastDealSeqField;
            }
            set {
                this.lastDealSeqField = value;
            }
        }
        
        /// <remarks/>
        public int OrderLotSize {
            get {
                return this.orderLotSizeField;
            }
            set {
                this.orderLotSizeField = value;
            }
        }
        
        /// <remarks/>
        public double MaxOrderPips {
            get {
                return this.maxOrderPipsField;
            }
            set {
                this.maxOrderPipsField = value;
            }
        }
        
        /// <remarks/>
        public double CancelOrderPips {
            get {
                return this.cancelOrderPipsField;
            }
            set {
                this.cancelOrderPipsField = value;
            }
        }
        
        /// <remarks/>
        public int TradeLotSize {
            get {
                return this.tradeLotSizeField;
            }
            set {
                this.tradeLotSizeField = value;
            }
        }
        
        /// <remarks/>
        public int MaxTradeLots {
            get {
                return this.maxTradeLotsField;
            }
            set {
                this.maxTradeLotsField = value;
            }
        }
        
        /// <remarks/>
        public int TierCount {
            get {
                return this.tierCountField;
            }
            set {
                this.tierCountField = value;
            }
        }
        
        /// <remarks/>
        public int Tier1MinLots {
            get {
                return this.tier1MinLotsField;
            }
            set {
                this.tier1MinLotsField = value;
            }
        }
        
        /// <remarks/>
        public int Tier1MaxLots {
            get {
                return this.tier1MaxLotsField;
            }
            set {
                this.tier1MaxLotsField = value;
            }
        }
        
        /// <remarks/>
        public int Tier1PipDifference {
            get {
                return this.tier1PipDifferenceField;
            }
            set {
                this.tier1PipDifferenceField = value;
            }
        }
        
        /// <remarks/>
        public int Tier2MinLots {
            get {
                return this.tier2MinLotsField;
            }
            set {
                this.tier2MinLotsField = value;
            }
        }
        
        /// <remarks/>
        public int Tier2MaxLots {
            get {
                return this.tier2MaxLotsField;
            }
            set {
                this.tier2MaxLotsField = value;
            }
        }
        
        /// <remarks/>
        public int Tier2PipDifference {
            get {
                return this.tier2PipDifferenceField;
            }
            set {
                this.tier2PipDifferenceField = value;
            }
        }
        
        /// <remarks/>
        public int Tier3MinLots {
            get {
                return this.tier3MinLotsField;
            }
            set {
                this.tier3MinLotsField = value;
            }
        }
        
        /// <remarks/>
        public int Tier3MaxLots {
            get {
                return this.tier3MaxLotsField;
            }
            set {
                this.tier3MaxLotsField = value;
            }
        }
        
        /// <remarks/>
        public int Tier3PipDifference {
            get {
                return this.tier3PipDifferenceField;
            }
            set {
                this.tier3PipDifferenceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://api.efxnow.com/webservices2.3")]
    public partial class objMarketText {
        
        private bool successField;
        
        private string errorDescriptionField;
        
        private string item0Field;
        
        private string item1Field;
        
        private string item2Field;
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorDescription {
            get {
                return this.errorDescriptionField;
            }
            set {
                this.errorDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Item0 {
            get {
                return this.item0Field;
            }
            set {
                this.item0Field = value;
            }
        }
        
        /// <remarks/>
        public string Item1 {
            get {
                return this.item1Field;
            }
            set {
                this.item1Field = value;
            }
        }
        
        /// <remarks/>
        public string Item2 {
            get {
                return this.item2Field;
            }
            set {
                this.item2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://api.efxnow.com/webservices2.3")]
    public partial class objDealResponse {
        
        private bool successField;
        
        private string errorDescriptionField;
        
        private int errorNumberField;
        
        private string confirmationField;
        
        private string confirmationNumberField;
        
        private double rateField;
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorDescription {
            get {
                return this.errorDescriptionField;
            }
            set {
                this.errorDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public int ErrorNumber {
            get {
                return this.errorNumberField;
            }
            set {
                this.errorNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Confirmation {
            get {
                return this.confirmationField;
            }
            set {
                this.confirmationField = value;
            }
        }
        
        /// <remarks/>
        public string ConfirmationNumber {
            get {
                return this.confirmationNumberField;
            }
            set {
                this.confirmationNumberField = value;
            }
        }
        
        /// <remarks/>
        public double Rate {
            get {
                return this.rateField;
            }
            set {
                this.rateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://api.efxnow.com/webservices2.3")]
    public partial class objPlaceOrderResponse {
        
        private bool successField;
        
        private string errorDescriptionField;
        
        private int errorNumberField;
        
        private long customerOrderReferenceField;
        
        private string orderConfirmationField;
        
        private string customerDealRefField;
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorDescription {
            get {
                return this.errorDescriptionField;
            }
            set {
                this.errorDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public int ErrorNumber {
            get {
                return this.errorNumberField;
            }
            set {
                this.errorNumberField = value;
            }
        }
        
        /// <remarks/>
        public long CustomerOrderReference {
            get {
                return this.customerOrderReferenceField;
            }
            set {
                this.customerOrderReferenceField = value;
            }
        }
        
        /// <remarks/>
        public string OrderConfirmation {
            get {
                return this.orderConfirmationField;
            }
            set {
                this.orderConfirmationField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerDealRef {
            get {
                return this.customerDealRefField;
            }
            set {
                this.customerDealRefField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://api.efxnow.com/webservices2.3")]
    public partial class objProductSubscriptionResponse {
        
        private string messageField;
        
        private string errorNoField;
        
        private bool successField;
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorNo {
            get {
                return this.errorNoField;
            }
            set {
                this.errorNoField = value;
            }
        }
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetCommentDataSetCompletedEventHandler(object sender, GetCommentDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommentDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommentDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetDealBlotterDataSetCompletedEventHandler(object sender, GetDealBlotterDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDealBlotterDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDealBlotterDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetDealBlotterDataSetWithFilterCompletedEventHandler(object sender, GetDealBlotterDataSetWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDealBlotterDataSetWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDealBlotterDataSetWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetDelayedRatesDataSetCompletedEventHandler(object sender, GetDelayedRatesDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDelayedRatesDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDelayedRatesDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetMarginBlotterDataSetCompletedEventHandler(object sender, GetMarginBlotterDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMarginBlotterDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMarginBlotterDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetCustomMarginBlotterCompletedEventHandler(object sender, GetCustomMarginBlotterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomMarginBlotterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomMarginBlotterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetCustomPositionBlotterCompletedEventHandler(object sender, GetCustomPositionBlotterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomPositionBlotterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomPositionBlotterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetNewsDataSetCompletedEventHandler(object sender, GetNewsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetOrderBlotterDataSetCompletedEventHandler(object sender, GetOrderBlotterDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderBlotterDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderBlotterDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetPositionBlotterDataSetCompletedEventHandler(object sender, GetPositionBlotterDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPositionBlotterDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPositionBlotterDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetRatesBlotterCompletedEventHandler(object sender, GetRatesBlotterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRatesBlotterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRatesBlotterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetRatesCompletedEventHandler(object sender, GetRatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetRatesDataSetCompletedEventHandler(object sender, GetRatesDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRatesDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRatesDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetHistoricRatesDataSetCompletedEventHandler(object sender, GetHistoricRatesDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHistoricRatesDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHistoricRatesDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetSymbolBlotterDataSetCompletedEventHandler(object sender, GetSymbolBlotterDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSymbolBlotterDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSymbolBlotterDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetTickerCompletedEventHandler(object sender, GetTickerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTickerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTickerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetEconomicCalendarCompletedEventHandler(object sender, GetEconomicCalendarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEconomicCalendarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEconomicCalendarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetAccountCompletedEventHandler(object sender, GetAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetAccountServicesCompletedEventHandler(object sender, GetAccountServicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountServicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountServicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetDealBlotterCompletedEventHandler(object sender, GetDealBlotterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDealBlotterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDealBlotterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetDealBlotterWithFilterCompletedEventHandler(object sender, GetDealBlotterWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDealBlotterWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDealBlotterWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetMarginBlotterCompletedEventHandler(object sender, GetMarginBlotterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMarginBlotterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMarginBlotterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetOrderBlotterCompletedEventHandler(object sender, GetOrderBlotterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderBlotterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderBlotterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetPositionBlotterCompletedEventHandler(object sender, GetPositionBlotterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPositionBlotterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPositionBlotterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetSymbolBlotterCompletedEventHandler(object sender, GetSymbolBlotterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSymbolBlotterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSymbolBlotterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetPairSettingsCompletedEventHandler(object sender, GetPairSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPairSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPairSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetProductSubscriptionRelationshipBlotterCompletedEventHandler(object sender, GetProductSubscriptionRelationshipBlotterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductSubscriptionRelationshipBlotterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductSubscriptionRelationshipBlotterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetProductSubscriptionRelationshipBlotterDatasetCompletedEventHandler(object sender, GetProductSubscriptionRelationshipBlotterDatasetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductSubscriptionRelationshipBlotterDatasetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductSubscriptionRelationshipBlotterDatasetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SaveUserProductSubscriptionSettingsCompletedEventHandler(object sender, SaveUserProductSubscriptionSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveUserProductSubscriptionSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveUserProductSubscriptionSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objProductSubscriptionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objProductSubscriptionResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void PlaceSingleOrderCompletedEventHandler(object sender, PlaceSingleOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PlaceSingleOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PlaceSingleOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objPlaceOrderResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objPlaceOrderResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void ModifySingleOrderCompletedEventHandler(object sender, ModifySingleOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifySingleOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifySingleOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objPlaceOrderResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objPlaceOrderResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void PlaceOCOOrderCompletedEventHandler(object sender, PlaceOCOOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PlaceOCOOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PlaceOCOOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objPlaceOrderResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objPlaceOrderResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void ModifyOCOOrderCompletedEventHandler(object sender, ModifyOCOOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyOCOOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyOCOOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objPlaceOrderResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objPlaceOrderResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void CancelOrderCompletedEventHandler(object sender, CancelOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objPlaceOrderResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objPlaceOrderResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void DealRequestCompletedEventHandler(object sender, DealRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DealRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DealRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objDealResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objDealResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void DealRequestByDealIdCompletedEventHandler(object sender, DealRequestByDealIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DealRequestByDealIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DealRequestByDealIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objDealResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objDealResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void DealRequestAtBestCompletedEventHandler(object sender, DealRequestAtBestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DealRequestAtBestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DealRequestAtBestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objDealResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objDealResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void CancelOrderByOrderIDCompletedEventHandler(object sender, CancelOrderByOrderIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelOrderByOrderIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelOrderByOrderIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objPlaceOrderResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objPlaceOrderResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void CancelOrderByReferenceNumberCompletedEventHandler(object sender, CancelOrderByReferenceNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelOrderByReferenceNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelOrderByReferenceNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objPlaceOrderResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objPlaceOrderResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void PlaceIfThenOrderCompletedEventHandler(object sender, PlaceIfThenOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PlaceIfThenOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PlaceIfThenOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objPlaceOrderResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objPlaceOrderResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void ModifyIfThenOrderCompletedEventHandler(object sender, ModifyIfThenOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyIfThenOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyIfThenOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objPlaceOrderResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objPlaceOrderResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void PlaceIfThenOCOOrderCompletedEventHandler(object sender, PlaceIfThenOCOOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PlaceIfThenOCOOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PlaceIfThenOCOOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objPlaceOrderResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objPlaceOrderResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void ModifyIfThenOCOOrderCompletedEventHandler(object sender, ModifyIfThenOCOOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyIfThenOCOOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyIfThenOCOOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objPlaceOrderResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objPlaceOrderResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void PlaceSingleASSPOrderCompletedEventHandler(object sender, PlaceSingleASSPOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PlaceSingleASSPOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PlaceSingleASSPOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objPlaceOrderResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objPlaceOrderResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void ModifySingleASSPOrderCompletedEventHandler(object sender, ModifySingleASSPOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifySingleASSPOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifySingleASSPOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objPlaceOrderResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objPlaceOrderResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void PlaceOCOASSPOrderCompletedEventHandler(object sender, PlaceOCOASSPOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PlaceOCOASSPOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PlaceOCOASSPOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objPlaceOrderResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objPlaceOrderResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void ModifyOCOASSPOrderCompletedEventHandler(object sender, ModifyOCOASSPOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyOCOASSPOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyOCOASSPOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objPlaceOrderResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objPlaceOrderResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetAccountDetailsCompletedEventHandler(object sender, GetAccountDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void EchoCompletedEventHandler(object sender, EchoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EchoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EchoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetTimeCompletedEventHandler(object sender, GetTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetRatesServerAuthCompletedEventHandler(object sender, GetRatesServerAuthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRatesServerAuthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRatesServerAuthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void VerifyCredentialsCompletedEventHandler(object sender, VerifyCredentialsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyCredentialsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyCredentialsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetSubAccountAuthenticationKeyCompletedEventHandler(object sender, GetSubAccountAuthenticationKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubAccountAuthenticationKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubAccountAuthenticationKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetSubAccountCodeCompletedEventHandler(object sender, GetSubAccountCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubAccountCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubAccountCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetSubAccountNumberCompletedEventHandler(object sender, GetSubAccountNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubAccountNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubAccountNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void ServiceAuthenticationCompletedEventHandler(object sender, ServiceAuthenticationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ServiceAuthenticationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ServiceAuthenticationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetlTIDByBankConfCompletedEventHandler(object sender, GetlTIDByBankConfCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetlTIDByBankConfCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetlTIDByBankConfCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetCommentCompletedEventHandler(object sender, GetCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objMarketText Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objMarketText)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetNewsCompletedEventHandler(object sender, GetNewsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objMarketText Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objMarketText)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetAccountObjectCompletedEventHandler(object sender, GetAccountObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objAccount Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objAccount)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetIGAuthenticationKeyCompletedEventHandler(object sender, GetIGAuthenticationKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIGAuthenticationKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIGAuthenticationKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591